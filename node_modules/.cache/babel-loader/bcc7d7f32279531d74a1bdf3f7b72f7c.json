{"ast":null,"code":"var _jsxFileName = \"/Users/manu/_CODE/PROYECTOS/HOLACOMUNIDAD/_CODES/d-board/src/components/left-sidebar-1/item.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport { FiChevronRight } from 'react-icons/fi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Item = ({\n  url,\n  icon,\n  title,\n  items\n}) => {\n  _s();\n\n  const [hidden, setHidden] = useState(true);\n  let location = useLocation();\n  let {\n    pathname\n  } = { ...location\n  };\n  let active = pathname === url ? true : false;\n\n  if (pathname === '/' && url === '/dashboard') {\n    active = true;\n  }\n\n  if (pathname === '/' && url !== '/dashboard') {\n    active = false;\n  }\n\n  if (items.length === 0) {\n    return /*#__PURE__*/_jsxDEV(Link, {\n      to: url,\n      className: `left-sidebar-item ${active ? 'active' : ''}`,\n      children: [icon, /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"title\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: () => setHidden(!hidden),\n    className: `left-sidebar-item ${active ? 'active' : ''} ${hidden ? 'hidden-sibling' : 'open-sibling'}`,\n    children: [icon, /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"title\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FiChevronRight, {\n      className: \"ml-auto arrow\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Item, \"n2rY2xmzf6rqbeaxR2V9NlhRqjA=\", false, function () {\n  return [useLocation];\n});\n\n_c = Item;\nexport default Item;\n\nvar _c;\n\n$RefreshReg$(_c, \"Item\");","map":{"version":3,"sources":["/Users/manu/_CODE/PROYECTOS/HOLACOMUNIDAD/_CODES/d-board/src/components/left-sidebar-1/item.js"],"names":["React","useState","useLocation","Link","FiChevronRight","Item","url","icon","title","items","hidden","setHidden","location","pathname","active","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,WAAR,QAA0B,kBAA1B;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SACEC,cADF,QAEO,gBAFP;;;AAIA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA,GAAD;AAAMC,EAAAA,IAAN;AAAYC,EAAAA,KAAZ;AAAmBC,EAAAA;AAAnB,CAAD,KAA+B;AAAA;;AAC1C,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,IAAD,CAApC;AACA,MAAIW,QAAQ,GAAGV,WAAW,EAA1B;AACA,MAAI;AAACW,IAAAA;AAAD,MAAa,EAAC,GAAGD;AAAJ,GAAjB;AACA,MAAIE,MAAM,GAAGD,QAAQ,KAAKP,GAAb,GAAmB,IAAnB,GAA0B,KAAvC;;AACA,MAAGO,QAAQ,KAAK,GAAb,IAAoBP,GAAG,KAAK,YAA/B,EAA6C;AAC3CQ,IAAAA,MAAM,GAAG,IAAT;AACD;;AACD,MAAGD,QAAQ,KAAK,GAAb,IAAoBP,GAAG,KAAK,YAA/B,EAA6C;AAC3CQ,IAAAA,MAAM,GAAG,KAAT;AACD;;AACD,MAAIL,KAAK,CAACM,MAAN,KAAiB,CAArB,EAAwB;AACtB,wBACE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAET,GAAV;AAAe,MAAA,SAAS,EAAG,qBAAoBQ,MAAM,GAAG,QAAH,GAAc,EAAG,EAAtE;AAAA,iBACGP,IADH,eAEE;AAAM,QAAA,SAAS,EAAC,OAAhB;AAAA,kBAAyBC;AAAzB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AACD,sBACE;AACE,IAAA,OAAO,EAAE,MAAMG,SAAS,CAAC,CAACD,MAAF,CAD1B;AAEE,IAAA,SAAS,EAAG,qBAAoBI,MAAM,GAAG,QAAH,GAAc,EAAG,IACrDJ,MAAM,GAAG,gBAAH,GAAsB,cAC7B,EAJH;AAAA,eAKGH,IALH,eAME;AAAM,MAAA,SAAS,EAAC,OAAhB;AAAA,gBAAyBC;AAAzB;AAAA;AAAA;AAAA;AAAA,YANF,eAOE,QAAC,cAAD;AAAgB,MAAA,SAAS,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CA9BD;;GAAMH,I;UAEWH,W;;;KAFXG,I;AAgCN,eAAeA,IAAf","sourcesContent":["import React, {useState} from 'react'\nimport {useLocation} from 'react-router-dom'\nimport {Link} from 'react-router-dom'\nimport {\n  FiChevronRight,\n} from 'react-icons/fi'\n\nconst Item = ({url, icon, title, items}) => {\n  const [hidden, setHidden] = useState(true)\n  let location = useLocation()\n  let {pathname} = {...location}\n  let active = pathname === url ? true : false\n  if(pathname === '/' && url === '/dashboard') {\n    active = true\n  }\n  if(pathname === '/' && url !== '/dashboard') {\n    active = false\n  }\n  if (items.length === 0) {\n    return (\n      <Link to={url} className={`left-sidebar-item ${active ? 'active' : ''}`}>\n        {icon}\n        <span className=\"title\">{title}</span>\n      </Link>\n    )\n  }\n  return (\n    <button\n      onClick={() => setHidden(!hidden)}\n      className={`left-sidebar-item ${active ? 'active' : ''} ${\n        hidden ? 'hidden-sibling' : 'open-sibling'\n      }`}>\n      {icon}\n      <span className=\"title\">{title}</span>\n      <FiChevronRight className=\"ml-auto arrow\" />\n    </button>\n  )\n}\n\nexport default Item\n"]},"metadata":{},"sourceType":"module"}